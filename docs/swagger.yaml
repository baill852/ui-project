basePath: /v1
definitions:
  lib.ErrorResponse:
    properties:
      message:
        example: some error message
        type: string
      requestId:
        example: b8fce75f-a603-4f30-8896-29bf54e6ce25
        type: string
    type: object
  user.User:
    properties:
      acct:
        example: test
        type: string
      createAt:
        example: "2022-06-28T22:22:43.292795+08:00"
        type: string
      fullname:
        example: test
        type: string
      pwd:
        example: test
        type: string
      updateAt:
        example: "2022-06-28T22:22:43.292795+08:00"
        type: string
    type: object
  user.UserToken:
    properties:
      token:
        type: string
    type: object
host: 127.0.0.1:8888
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: UI Project API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get User list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: fullname
        in: query
        name: fullname
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: count
        enum:
        - 10
        - 30
        - 50
        - 100
        in: query
        name: count
        type: integer
      - description: orderBy
        enum:
        - acct
        - pwd
        - fullname
        - create_at
        - update_at
        in: query
        name: orderBy
        type: string
      - description: sort
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get User list
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Get jwt token
      parameters:
      - description: acct
        in: body
        name: acct
        required: true
        schema:
          type: string
      - description: pwd
        in: body
        name: pwd
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Login
      tags:
      - User
  /users/{account}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pwd
        in: body
        name: pwd
        schema:
          type: string
      - description: fullname
        in: body
        name: fullname
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - User
securityDefinitions:
  Bearer:
    description: Type \"Bearer\" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
